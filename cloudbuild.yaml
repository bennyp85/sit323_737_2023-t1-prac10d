steps:
  # Build Docker Image for frontend
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/frontend:$COMMIT_SHA'
    dir: 'src/frontend'

  # Build Docker Image for backend
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/backend:$COMMIT_SHA'
    dir: 'src/backend'

  # Docker Push
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${PROJECT_ID}/frontend:$COMMIT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${PROJECT_ID}/backend:$COMMIT_SHA']

  # Update Kubernetes deployment with new images
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/nodejs-calculator-frontend'
      - 'mynode=gcr.io/${PROJECT_ID}/frontend:$COMMIT_SHA'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-west1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=hello-cluster'

  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/nodejs-calculator-backend'
      - 'mynode=gcr.io/${PROJECT_ID}/backend:$COMMIT_SHA'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-west1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=hello-cluster'

options:
  logging: 'CLOUD_LOGGING_ONLY'
  serviceAccount: 'sit323@sit323-388410.iam.gserviceaccount.com'
